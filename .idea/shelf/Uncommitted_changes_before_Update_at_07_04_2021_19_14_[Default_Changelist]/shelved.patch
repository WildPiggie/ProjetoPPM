Index: src/QTrees/QuadTree.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package QTrees\r\n\r\nimport java.awt.Color\r\nimport QTrees.QuadTree._\r\n\r\ncase class QuadTree(qt: QTree[Coords]){\r\n\r\n  def makeBitMap (): BitMap = QuadTree.makeBitMap(this.qt)\r\n  def scale (scale:Double, quadT:QTree[Coords]):QTree[Coords] = ???\r\n  def mirrorV (quadT:QTree[Coords]):QTree[Coords] = ???\r\n  def mirrorH (quadT:QTree[Coords]):QTree[Coords] = ???\r\n  def rotateD (quadT:QTree[Coords]):QTree[Coords] = ???\r\n  def rotateR (quadT:QTree[Coords]):QTree[Coords] = ???\r\n  def mapColourEffect (f:Color => Color, quadT:QTree[Coords]):QTree[Coords] = ???\r\n\r\n}\r\n\r\nobject QuadTree{\r\n\r\n  type Point = (Int, Int)\r\n  type Coords = (Point, Point)\r\n  type Section = (Coords, Color)\r\n\r\n  def makeBitMap (qt: QTree[Coords]): BitMap = ???\r\n  def scale (scale:Double, qt:QTree[Coords]): QTree[Coords] = ??? //verificar se é possível realizar o scaling ou não\r\n  def mirrorV (qt:QTree[Coords]):QTree[Coords] = ???\r\n  def mirrorH (qt:QTree[Coords]):QTree[Coords] = ???\r\n  def rotateD (qt:QTree[Coords]):QTree[Coords] = ???\r\n  def rotateR (qt:QTree[Coords]):QTree[Coords] = ???\r\n  def mapColourEffect (f:Color => Color, qt:QTree[Coords]):QTree[Coords] = ???\r\n}\r\n\r\n\r\n/**\r\n * T1. makeQTree(b:BitMap):QTree criação de uma quadtree a partir de um bitmap\r\n * fornecido e método oposto i.e. para transformar uma quadtree num bitmap;\r\n * T2. scale(scale:Double, qt:QTree):QTree operação de ampliação/redução de\r\n * uma imagem, segundo o fator fornecido (por exemplo 1.5 ampliará a imagem\r\n * aumentando ambos os seus lados em 50%);\r\n * T3. mirrorV / mirrorH (qt:QTree):QTree operações de espelhamento vertical e\r\n * horizontal;\r\n * T4. rotateD / rotateR (qt:QTree):QTree operações de rotação de 90 graus nos\r\n * dois sentidos;\r\n * T5. mapColourEffect(f:Colour => Colour, qt:QTree):QTree mapeamento\r\n * uniforme de uma função em toda a imagem. Deverá utilizar este método para ilustrar\r\n * a aplicação dos efeitos Noise, Contrast e Sepia.\r\n */\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/QTrees/QuadTree.scala b/src/QTrees/QuadTree.scala
--- a/src/QTrees/QuadTree.scala	(revision a3431841fb6a3e196ce947ab1a6ad4826e936c9f)
+++ b/src/QTrees/QuadTree.scala	(date 1617736155482)
@@ -5,7 +5,7 @@
 
 case class QuadTree(qt: QTree[Coords]){
 
-  def makeBitMap (): BitMap = QuadTree.makeBitMap(this.qt)
+  def makeBitMap (quadT: QTree[Coords]): BitMap = QuadTree.makeBitMap(qt) //correto?
   def scale (scale:Double, quadT:QTree[Coords]):QTree[Coords] = ???
   def mirrorV (quadT:QTree[Coords]):QTree[Coords] = ???
   def mirrorH (quadT:QTree[Coords]):QTree[Coords] = ???
@@ -22,7 +22,7 @@
   type Section = (Coords, Color)
 
   def makeBitMap (qt: QTree[Coords]): BitMap = ???
-  def scale (scale:Double, qt:QTree[Coords]): QTree[Coords] = ??? //verificar se é possível realizar o scaling ou não
+  def scale (scale:Double, qt:QTree[Coords]):QTree[Coords] = ???
   def mirrorV (qt:QTree[Coords]):QTree[Coords] = ???
   def mirrorH (qt:QTree[Coords]):QTree[Coords] = ???
   def rotateD (qt:QTree[Coords]):QTree[Coords] = ???
Index: src/QTrees/Main.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package QTrees\r\n\r\nobject Main {\r\n  def main(args: Array[String]): Unit = {\r\n    // testar mais coisas\r\n\r\n    /*\r\n    *\r\n    * //Exemplo de QTree[Coords]\r\n\r\n       val l1: QLeaf[Coords, Section] = QLeaf((((0,0):Point,(0,0):Point):Coords, Color.red):Section)\r\n       val l2: QLeaf[Coords, Section] = QLeaf((((1,0):Point,(1,0):Point):Coords, Color.blue):Section)\r\n       val l3: QLeaf[Coords, Section] = QLeaf((((0,1):Point,(0,1):Point):Coords, Color.yellow):Section)\r\n       val l4: QLeaf[Coords, Section] = QLeaf((((1,1):Point,(1,1):Point):Coords, Color.green):Section)\r\n\r\n       val qt: QTree[Coords] = QNode(((0,0),(1,1)), l1, l2, l3, l4)\r\n* */\r\n\r\n    // List(List(1ª linha), List(2ª linha), ...)\r\n    val a = ImageUtil.readColorImage(\"src//objc2_2.png\").toList\r\n\r\n    //print(a)\r\n\r\n    val b = a map (x=>x.toList)\r\n\r\n    val c = BitMap(b).makeQTree()\r\n\r\n    println(\"QTree: \" + c)\r\n\r\n\r\n\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/QTrees/Main.scala b/src/QTrees/Main.scala
--- a/src/QTrees/Main.scala	(revision a3431841fb6a3e196ce947ab1a6ad4826e936c9f)
+++ b/src/QTrees/Main.scala	(date 1617818246289)
@@ -8,18 +8,22 @@
     *
     * //Exemplo de QTree[Coords]
 
-       val l1: QLeaf[Coords, Section] = QLeaf((((0,0):Point,(0,0):Point):Coords, Color.red):Section)
-       val l2: QLeaf[Coords, Section] = QLeaf((((1,0):Point,(1,0):Point):Coords, Color.blue):Section)
-       val l3: QLeaf[Coords, Section] = QLeaf((((0,1):Point,(0,1):Point):Coords, Color.yellow):Section)
-       val l4: QLeaf[Coords, Section] = QLeaf((((1,1):Point,(1,1):Point):Coords, Color.green):Section)
+       val l1: QNode[Coords] = QNode( ((0,0):Point,(1,1):Point):Coords, n1, n2, n3, n4 )
+       val n1 = QLeaf((((0,0):Point,(0,0):Point):Coords, Color.red):Section)
+       val n2 = QLeaf((((1,0):Point,(1,0):Point):Coords, Color.blue):Section)
+       val n3 = QLeaf((((0,1):Point,(0,1):Point):Coords, Color.yellow):Section)
+       val n4 = QLeaf((((1,1):Point,(1,1):Point):Coords, Color.green):Section)
 
-       val qt: QTree[Coords] = QNode(((0,0),(1,1)), l1, l2, l3, l4)
+       val l2: QLeaf[Coords, Section] = QLeaf((((2,0):Point,(3,1):Point):Coords, Color.blue):Section)
+       val l3: QLeaf[Coords, Section] = QLeaf((((0,2):Point,(1,3):Point):Coords, Color.yellow):Section)
+       val l4: QLeaf[Coords, Section] = QLeaf((((2,2):Point,(3,3):Point):Coords, Color.green):Section)
+
+       val qt: QTree[Coords] = QNode( ((0,0),(2,2)), l1, l2, l3, l4 )
 * */
 
     // List(List(1ª linha), List(2ª linha), ...)
-    val a = ImageUtil.readColorImage("src//objc2_2.png").toList
+    val a = ImageUtil.readColorImage("src//black8x8.png").toList
 
-    //print(a)
 
     val b = a map (x=>x.toList)
 
@@ -29,5 +33,6 @@
 
 
 
+
   }
 }
Index: src/QTrees/BitMap.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package QTrees\r\n\r\nimport java.awt.Color\r\nimport QTrees.BitMap._\r\n\r\nimport scala.annotation.tailrec\r\ncase class BitMap(img: List[List[Int]]) {\r\n  def makeQTree(): QTree[Coords] = BitMap.makeQTree(this)\r\n}\r\n\r\nobject BitMap {\r\n\r\n  type Point = (Int, Int)\r\n  type Coords = (Point, Point)\r\n  type Section = (Coords, Color)\r\n\r\n  def makeQTree (b:BitMap): QTree[Coords] = {\r\n    val x = b.img.length - 1\r\n    val y = b.img(0).length - 1 //img(0) pode ser substituido por algo mais limpo?\r\n    auxMQT( ((0,0):Point, (x,y):Point):Coords, b )\r\n  }\r\n\r\n\r\n  def auxMQT (c:Coords, b: BitMap):QTree[Coords] = {\r\n\r\n    //temos que considerar que pode não ser quadrada e imagens com lados impares\r\n\r\n    if( (c._1._1 == c._2._1) && (c._1._2 == c._2._2) ) {\r\n      val a = ImageUtil.decodeRgb(b.img(c._1._2)(c._1._1)).toList\r\n      val color = new Color(a(0),a(1),a(2))\r\n      return new QLeaf[Coords, Section]( (c, color):Section ) // RETURN?\r\n    }\r\n\r\n    val sCords = splitCoords(c)\r\n\r\n    println(\"sCords._1: \" + sCords._1)\r\n    println(\"sCords._2: \" + sCords._2)\r\n    println(\"sCords._3: \" + sCords._3)\r\n    println(\"sCords._4: \" + sCords._4)\r\n\r\n    val qtOne = auxMQT(sCords._1, b)\r\n    val qtTwo = auxMQT(sCords._2, b)\r\n    val qtThree = auxMQT(sCords._3, b)\r\n    val qtFour = auxMQT(sCords._4, b)\r\n\r\n    (qtOne, qtTwo, qtThree, qtFour) match {\r\n      case (q1: QLeaf[Coords, Section], q2:QLeaf[Coords, Section], q3:QLeaf[Coords, Section], q4:QLeaf[Coords, Section]) => {\r\n        if( (q1.value._2 equals  q2.value._2) && (q3.value._2 equals q4.value._2) && (q1.value._2 equals q4.value._2 ) )\r\n          return new QLeaf[Coords, Section]( (c, q1.value._2):Section )\r\n        else\r\n          new QNode[Coords](c, qtOne, qtTwo, qtThree, qtFour) //(value: A, one: QTree[A], two: QTree[A], three: QTree[A], four: QTree[A])\r\n      }\r\n      case _ => new QNode[Coords](c, qtOne, qtTwo, qtThree, qtFour) //(value: A, one: QTree[A], two: QTree[A], three: QTree[A], four: QTree[A])\r\n    }\r\n  }\r\n\r\n  def splitCoords(c:Coords): (Coords, Coords, Coords, Coords) = { //temos que considerar que pode não ser quadrada e imagens com lados impares\r\n    val side = c._2._1 - c._1._1 + 1\r\n    val c1 = ( (c._1),(c._2._1-side/2,c._2._2-side/2) )\r\n    val c2 = ( (c._1._1+side/2,c._1._2),(c._2._1,c._2._2-side/2) )\r\n    val c3 = ( (c._1._1,c._1._2+side/2),(c._2._1-side/2,c._2._2) )\r\n    val c4 = ( (c._1._1+side/2, c._1._2+side/2),(c._2) )\r\n    (c1,c2,c3,c4)\r\n  }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/QTrees/BitMap.scala b/src/QTrees/BitMap.scala
--- a/src/QTrees/BitMap.scala	(revision a3431841fb6a3e196ce947ab1a6ad4826e936c9f)
+++ b/src/QTrees/BitMap.scala	(date 1617809962801)
@@ -21,7 +21,7 @@
   }
 
 
-  def auxMQT (c:Coords, b: BitMap):QTree[Coords] = {
+  def auxMQT (c:Coords, b: BitMap): QTree[Coords] = {
 
     //temos que considerar que pode não ser quadrada e imagens com lados impares
 
@@ -56,6 +56,7 @@
 
   def splitCoords(c:Coords): (Coords, Coords, Coords, Coords) = { //temos que considerar que pode não ser quadrada e imagens com lados impares
     val side = c._2._1 - c._1._1 + 1
+    println("side : " + side)
     val c1 = ( (c._1),(c._2._1-side/2,c._2._2-side/2) )
     val c2 = ( (c._1._1+side/2,c._1._2),(c._2._1,c._2._2-side/2) )
     val c3 = ( (c._1._1,c._1._2+side/2),(c._2._1-side/2,c._2._2) )
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"b8deda37-1e6a-47d0-834a-df247805d7e0\" name=\"Default Changelist\" comment=\"Início da criação da função makeQTree\">\r\n      <change afterPath=\"$PROJECT_DIR$/src/black100x100.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/black8x8.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/objc2_2.png\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/QTrees/BitMap.scala\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/QTrees/BitMap.scala\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/QTrees/Main.scala\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/QTrees/Main.scala\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/QTrees/QuadTree.scala\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/QTrees/QuadTree.scala\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"CodeStyleSettingsInfer\">\r\n    <option name=\"done\" value=\"true\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n        <option value=\"Scala Trait\" />\r\n        <option value=\"Scala Object\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectCodeStyleSettingsMigration\">\r\n    <option name=\"version\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"1qbsJD8EdaDvUMUjZ5ikbwktWje\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"ASKED_ADD_EXTERNAL_FILES\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/../ficha5\" />\r\n    <property name=\"project.structure.last.edited\" value=\"Project\" />\r\n    <property name=\"project.structure.proportion\" value=\"0.15\" />\r\n    <property name=\"project.structure.side.proportion\" value=\"0.2\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"org.jetbrains.plugins.github.ui.GithubSettingsConfigurable\" />\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"QTrees.Main\" />\r\n      <module name=\"ProjetoPPM\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"QTrees.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"b8deda37-1e6a-47d0-834a-df247805d7e0\" name=\"Default Changelist\" comment=\"\" />\r\n      <created>1617359641107</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1617359641107</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Initial commit\">\r\n      <created>1617362089390</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1617362089390</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Todos os ficheiros do projeto\">\r\n      <created>1617371701820</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1617371701820</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"teste\">\r\n      <created>1617377893382</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1617377893382</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Criação de uma alternativa de acordo com o e-mail do professor e um pouco de imaginação do Samuel\">\r\n      <created>1617636536117</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1617636536117</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Início da criação da função makeQTree\">\r\n      <created>1617728097314</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1617728097314</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"6\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"1\">\r\n          <value>\r\n            <State>\r\n              <option name=\"SHOW_ONLY_AFFECTED_CHANGES\" value=\"true\" />\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"HEAD\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                  <entry key=\"roots\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"$PROJECT_DIR$\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"Initial commit\" />\r\n    <MESSAGE value=\"Todos os ficheiros do projeto\" />\r\n    <MESSAGE value=\"teste\" />\r\n    <MESSAGE value=\"Criação de uma alternativa de acordo com o e-mail do professor e um pouco de imaginação do Samuel\" />\r\n    <MESSAGE value=\"Início da criação da função makeQTree\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Início da criação da função makeQTree\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision a3431841fb6a3e196ce947ab1a6ad4826e936c9f)
+++ b/.idea/workspace.xml	(date 1617736496029)
@@ -2,9 +2,6 @@
 <project version="4">
   <component name="ChangeListManager">
     <list default="true" id="b8deda37-1e6a-47d0-834a-df247805d7e0" name="Default Changelist" comment="Início da criação da função makeQTree">
-      <change afterPath="$PROJECT_DIR$/src/black100x100.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/black8x8.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/objc2_2.png" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/QTrees/BitMap.scala" beforeDir="false" afterPath="$PROJECT_DIR$/src/QTrees/BitMap.scala" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/QTrees/Main.scala" beforeDir="false" afterPath="$PROJECT_DIR$/src/QTrees/Main.scala" afterDir="false" />
@@ -39,19 +36,16 @@
     <option name="version" value="1" />
   </component>
   <component name="ProjectId" id="1qbsJD8EdaDvUMUjZ5ikbwktWje" />
-  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
-    <ConfirmationsSetting value="2" id="Add" />
-  </component>
+  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
   <component name="ProjectViewState">
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
   <component name="PropertiesComponent">
-    <property name="ASKED_ADD_EXTERNAL_FILES" value="true" />
     <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
     <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
     <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
-    <property name="last_opened_file_path" value="$PROJECT_DIR$/../ficha5" />
+    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
     <property name="project.structure.last.edited" value="Project" />
     <property name="project.structure.proportion" value="0.15" />
     <property name="project.structure.side.proportion" value="0.2" />
@@ -114,14 +108,7 @@
       <option name="project" value="LOCAL" />
       <updated>1617636536117</updated>
     </task>
-    <task id="LOCAL-00005" summary="Início da criação da função makeQTree">
-      <created>1617728097314</created>
-      <option name="number" value="00005" />
-      <option name="presentableId" value="LOCAL-00005" />
-      <option name="project" value="LOCAL" />
-      <updated>1617728097314</updated>
-    </task>
-    <option name="localTasksCounter" value="6" />
+    <option name="localTasksCounter" value="5" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -162,7 +149,6 @@
     <option name="oldMeFiltersMigrated" value="true" />
   </component>
   <component name="VcsManagerConfiguration">
-    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
     <MESSAGE value="Initial commit" />
     <MESSAGE value="Todos os ficheiros do projeto" />
     <MESSAGE value="teste" />
